name: GRUBA LAW LIBRARY

on:
  push:
    branches:
      - main

jobs:
  windows_build:
    runs-on: windows-latest

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.18.1
          cache: 'npm'

      # Install dependencies
      - name: Install Dependencies
        run: |
          npm install
          npm install -g electron-builder

      # Build for Windows
      - name: Build Windows .exe
        run: npx electron-builder --win

      # Debug the dist directory
      - name: Debug dist directory
        run: dir dist  # List dist directory contents

      # Verify .exe file existence
      - name: Verify .exe file existence
        shell: pwsh
        run: |
          $ExeFile = Get-ChildItem -Path dist -Filter "*.exe" -Recurse | Select-Object -First 1
          if (-not $ExeFile) {
            Write-Host "Error: .exe file not found in the dist/ directory."
            exit 1
          }
          Write-Host "Found Windows .exe: $($ExeFile.FullName)"
          echo "exe_path=$($ExeFile.FullName)" | Out-File -FilePath $env:GITHUB_ENV -Append

      # Archive .exe into .zip
      - name: Archive .exe into .zip
        shell: pwsh
        run: |
          $ZipFile = "dist/Gruba-Law-Library-Windows.zip"
          $ExeFile = "${{ env.exe_path }}"
          if (Test-Path $ExeFile) {
            Compress-Archive -Path $ExeFile -DestinationPath $ZipFile -Force
            Write-Host "Created zip file: $ZipFile"
            echo "zip_file=$ZipFile" | Out-File -FilePath $env:GITHUB_ENV -Append
          } else {
            Write-Host "Error: .exe file not found at $ExeFile"
            exit 1
          }

      # Create GitHub Release
      - name: Create GitHub Release
        id: create_windows_release
        uses: actions/create-release@v1
        with:
          tag_name: v1.0.0
          release_name: "GRUBA LAW LIBRARY v1.0.0 (Windows)"
          body: "Windows release of the Gruba Law Library"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload Windows .exe Release Asset
      - name: Upload Windows .exe Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_windows_release.outputs.upload_url }}
          asset_path: ${{ env.zip_file }}
          asset_name: Gruba-Law-Library-Windows.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
