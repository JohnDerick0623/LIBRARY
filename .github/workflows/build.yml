name: GRUBA LAW LIBRARY

on:
  push:
    branches:
      - main

jobs:
  macos_build:
    runs-on: macos-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js and build for macOS
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.18.1
          cache: 'npm'

      - name: Install Dependencies
        run: |
          npm install
          npm install -g electron-builder

      - name: Build macOS .app
        run: npx electron-builder --mac dir

      - name: Create GitHub Release for macOS
        id: create_macos_release
        uses: actions/create-release@v1
        with:
          tag_name: v1.0.0
          release_name: "GRUBA LAW LIBRARY v1.0.0 (macOS)"
          body: "macOS release of the Gruba Law Library"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Save macOS upload_url
        run: echo "${{ steps.create_macos_release.outputs.upload_url }}" > upload_url_macos.txt

      - name: Archive .app into .zip
        run: |
          ZIP_FILE="dist/Gruba-Law-Library-macOS.zip"
          APP_DIR="${{ env.app_path }}"
          echo "Zipping the .app file from: $APP_DIR"
          zip -r $ZIP_FILE "$APP_DIR"
          echo "zip_file=$ZIP_FILE" >> $GITHUB_ENV
      
      - name: List dist directory contents (macOS)
        run: ls -R dist
      
      - name: Upload macOS .app Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_macos_release.outputs.upload_url }}
          asset_path: ${{ env.zip_file }}  # This should be the exact path to the zip file
          asset_name: Gruba-Law-Library-macOS.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  windows_build:
    runs-on: windows-latest
    needs: macos_build  # Make this job depend on the macOS build job

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      # Set up Node.js and build for Windows
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.18.1
          cache: 'npm'

      - name: Install Dependencies
        run: |
          npm install
          npm install -g electron-builder

      - name: Build Windows .exe
        run: npx electron-builder --win dir

      - name: Create GitHub Release for Windows
        id: create_windows_release
        uses: actions/create-release@v1
        with:
          tag_name: v1.0.0
          release_name: "GRUBA LAW LIBRARY v1.0.0 (Windows)"
          body: "Windows release of the Gruba Law Library"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Save Windows upload_url
        run: echo "${{ steps.create_windows_release.outputs.upload_url }}" > upload_url_windows.txt

      - name: Upload Windows .exe Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_windows_release.outputs.upload_url }}
          asset_path: dist/Gruba-Law-Library-Windows.zip
          asset_name: Gruba-Law-Library-Windows.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
