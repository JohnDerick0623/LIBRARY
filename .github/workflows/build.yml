name: GRUBA LAW LIBRARY

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: macos-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.18.1
          cache: 'npm'

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: npm install

      # Step 4: Build the app for macOS
      - name: Build .app for macOS
        run: npx electron-builder --mac

      # Step 5: Build the app for Windows
      - name: Build .exe for Windows
        run: npx electron-builder --win

      # Step 6: Debug dist directory to verify files
      - name: Debug dist directory
        run: ls -R dist

      # Step 7: Create a GitHub Release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v1.0.0
          release_name: "GRUBA LAW LIBRARY v1.0.0"
          body: |
            ðŸŽ‰ Initial release of the Gruba Law Library app for macOS and Windows!
            Download the `.dmg` or `.exe` file below.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 8: Upload macOS Release Asset
      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/*.dmg
          asset_name: Gruba-Law-Library-macOS.dmg
          asset_content_type: application/x-apple-diskimage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 9: Upload Windows Release Asset
      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/*.exe
          asset_name: Gruba-Law-Library-Windows.exe
          asset_content_type: application/x-msdownload
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 10: Upload macOS Zip (Optional)
      - name: Upload macOS Zip Release Asset
        if: always()
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/*.zip
          asset_name: Gruba-Law-Library-macOS.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
