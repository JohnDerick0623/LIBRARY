name: Release Electron App

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags (e.g., v1.0.0)

jobs:
  build:
    strategy:
      matrix:
        platform: [win, mac]

    runs-on: ${{ matrix.platform == 'win' && 'windows-latest' || 'macos-latest' }}  # Dynamically set the runner based on platform

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'  # Specify your Node.js version

    - name: Install dependencies
      run: |
        npm install

    - name: Build Electron app
      run: |
        npm run build  # If you have a build script, or use electron-builder directly

    - name: Package Electron app
      run: |
        npm run dist  # This will use electron-builder to package the app

    - name: Upload artifact for ${{ matrix.platform }}
      uses: actions/upload-artifact@v2
      with:
        name: app-${{ matrix.platform }}
        path: dist/*  # Path to the output directory containing packaged apps

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*  # Files to be uploaded in the release

    - name: Publish GitHub Release
      run: gh release create ${{ github.ref }} dist/* --title "Release ${{ github.ref }}" --notes "Release notes"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
